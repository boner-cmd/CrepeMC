#!/bin/sh

if [ ! -e template ]; then
  echo "No template in current directory." 1>&2 \
    && exit 1
fi

readonly PAPER_API_URL="https://papermc.io/api/v2/projects/paper"
readonly ADOPTIUM_API_URL="https://api.adoptium.net/v3/info/available_releases"

PAPER_VERSION="$(curl -LfsS "$PAPER_API_URL")" \
  && PAPER_VERSION="$(echo "$PAPER_VERSION" | sed -e 's/.*,"//' -e 's/".*//')" \
  && PAPER_VERSION="$(echo "$PAPER_VERSION" | tr -cd 'a-zA-Z0-9.-')" \
  || exit 1

PAPER_BUILD="$(curl -LfsS "${PAPER_API_URL}/versions/${PAPER_VERSION}")" \
  && PAPER_BUILD="$(echo "$PAPER_BUILD" | sed -e 's/.*,//' -e 's/]}//')" \
  && PAPER_BUILD="$(echo "$PAPER_BUILD" | tr -cd 'a-zA-Z0-9.-')" \
  || exit 1

PAPER_SHA256="$(curl -LfsS "${PAPER_API_URL}/versions/${PAPER_VERSION}/builds/${PAPER_BUILD}")" \
  && PAPER_SHA256="$(echo "$PAPER_SHA256" | sed -e 's/"},"mojang-mappings.*//' -e 's/.*sha256":"//')" \
  && PAPER_SHA256="$(echo "$PAPER_SHA256" | tr -cd 'a-zA-Z0-9.-')" \
  || exit 1

readonly PAPER_FILENAME="paper-${PAPER_VERSION}-${PAPER_BUILD}.jar"
readonly PAPER_DOWNLOAD_URL="${PAPER_API_URL}/${PAPER_VERSION}/builds/${PAPER_BUILD}/downloads/${PAPER_FILENAME}"

# grab the latest LTS release of Java
# extra tests required before it's safe to grab newest
# grabbing the newest release might break Paper compatibility

# Adoptium embeds whitespace and newlines in its API output, Paper does not

JAVA_VERSION="$(curl -LfsS "$ADOPTIUM_API_URL")" \
  && JAVA_VERSION="$(echo "$JAVA_VERSION" | tr -d [:space:])" \
  && JAVA_VERSION="$(echo "$JAVA_VERSION" | sed -e 's/].*//' -e 's/.*,//')" \
  && JAVA_VERSION="$(echo "$JAVA_VERSION" | tr -cd 'a-zA-Z0-9.-')" \
  || exit 1

if [ ! -d working ]; then
  mkdir working
fi
cp ./template ./working/template
cd working || exit 1

sed -i "s,PAPER_DOWNLOAD_URL_,${PAPER_DOWNLOAD_URL},; \
  s,PAPER_FILENAME_,${PAPER_FILENAME},g; \
  s,PAPER_VERSION_,${PAPER_VERSION},; \
  s,JAVA_VERSION_,${JAVA_VERSION},; \
  s,PAPER_SHA256_,${PAPER_SHA256},;" template \
  || exit 1

cat template
exit 0
